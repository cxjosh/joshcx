<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on josh.cx</title>
        <link>https://josh.cx/posts/</link>
        <description>Recent content in Posts on josh.cx</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sat, 13 Apr 2024 00:00:00 +0000</lastBuildDate>
        <atom:link href="https://josh.cx/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>esc1 - a surprisingly easy privilege escalation</title>
            <link>https://josh.cx/posts/adcs/</link>
            <pubDate>Sat, 13 Apr 2024 00:00:00 +0000</pubDate>
            
            <guid>https://josh.cx/posts/adcs/</guid>
            <description>what is adcs? adcs, otherwise known as active directory certificate services is a windows server role that issues and manages PKI certificates that are used in authentication and communication protocols.
these certificates are issued through root and subordinate CA&amp;rsquo;s to various different users, computers and services to maintain certificate validity.
what is esc1? esc1 is a specific vulnerability targeting overly permissive active directory certificate templates that are issued by these CA&amp;rsquo;s.</description>
            <content type="html"><![CDATA[<h2 id="what-is-adcs">what is adcs?</h2>
<p>adcs, otherwise known as active directory certificate services is a windows server role that issues and manages PKI certificates that are used in authentication and communication protocols.</p>
<p>these certificates are issued through root and subordinate CA&rsquo;s to various different users, computers and services to maintain certificate validity.</p>
<h2 id="what-is-esc1">what is esc1?</h2>
<p>esc1 is a specific vulnerability targeting overly permissive active directory certificate templates that are issued by these CA&rsquo;s.</p>
<p>more specifically, if a template allows a standard domain user or domain computer to enroll/request a template, depending on how the template is configured they have the potential to impersonate any user on the domain.</p>
<p>i was pretty surprised how easy this was to replicate, and was also pretty surprised that i hadn&rsquo;t heard of this exploit before.</p>
<p>the first thing i tried after coming across said vulnerability was to replicate the privilege escalation under my workplace&rsquo;s environment. after approximately an hour using only a standard domain user account, i had successfully manage to impersonate the head of the SOC team to create a new domain user account and add it to the domain admins group using LDAP queries.</p>
<p><img src="/joshPwnedYou.png" alt="joshPwnedYou"></p>
<h2 id="what-makes-a-template-vulnerable">what makes a template vulnerable?</h2>
<p>there are a few things that we are looking for when exploiting ESC1, however the most damning are enrolment rights being granted to low privileged users and requesters being able to specify a subjectAltName in the CSR.</p>
<p><strong>example 1:</strong></p>
<p><img src="/sanRequest.png" alt="subjectAltName"></p>
<p>in the above image the ability to include a subjectAltName in the CSR to that specific template is allowed.</p>
<p>active directory will prioritise the SAN name in a certificate for identity if the field is present. this means that by specifying a specific username in the SAN a .pfx can be requested to impersonate any user (e.g domain administrators)</p>
<p>when creating a new template it does give a warning mentioning the risks upon allowing anybody to request a SAN, however if cloning an existing template with it enabled it does not grant a warning.</p>
<p><img src="/prevent.png" alt="Prevent"></p>
<p>à¸…^â€¢ï»Œâ€¢^à¸…</p>
<h3 id="proof-of-concept">proof of concept</h3>
<p>the tool that i used for absolutely everything was certipy which can be downloaded from the below link:</p>
<p><a href="https://github.com/ly4k/Certipy">https://github.com/ly4k/Certipy</a></p>
<p>credit to ly4k for maintaining such a fantastic tool.</p>
<p>for the purpose of this blog i have spun up a VM which mimics an AD &amp; CA server (CXLABS-DC-01)</p>
<p>i created a template under the name of VulnTemplate which allows the requestee to specify the SAN and also allows normal domain users to enroll into this template.</p>
<blockquote>
<p>python3 entry.py find -u &ldquo;<a href="mailto:joshua@CXLABS.LOCAL">joshua@CXLABS.LOCAL</a>&rdquo; -p &ldquo;REDACTED&rdquo; -dc-ip &ldquo;192.168.197.129&rdquo; -stdout -scheme ldap</p>
</blockquote>
<p>this uses the find module of certipy to enumerate all ADCS templates, where -u and -p are the credentials for the domain account and the DC-IP is the CA.</p>
<p>it&rsquo;s important to note that certipy uses LDAPS by default, in my messy DC deployment i have not issued any certs for LDAPS authentication, so i&rsquo;ve opted to use plain old ldap.</p>
<p>output from command:</p>
<p><img src="/VulnTemplate.png" alt="VulnTemplate"></p>
<p>straight away you can see we&rsquo;ve found a template vulnerable to ESC1, next we can leverage this and request a certificate with the SAN being &ldquo;domain_admin&rdquo; (a domain admin user i setup) with the payload looking a little something like this:</p>
<blockquote>
<p>python3 entry.py req -u <a href="mailto:joshua@cxlabs.local">joshua@cxlabs.local</a> -p REDACTED -target 192.168.197.129 -template VulnTemplate -ca &ldquo;CXLABS-CXLABS-DC-01-CA&rdquo; -upn &ldquo;<a href="mailto:domain_admin@cxlabs.local">domain_admin@cxlabs.local</a>&rdquo;</p>
</blockquote>
<p><img src="/poc.png" alt="poc"></p>
<p>as you can see we have successfully managed to receive a .PFX certificate that allows us to impersonate a domain admin.</p>
<p>we can now use this to open up an administrative LDAP certipy shell using the below payload:</p>
<blockquote>
<p>python3 auth -pfx domain_admin.pfx -dc-ip 192.168.197.129 -ldap-shell -debug</p>
</blockquote>
<p><img src="/pwnd.png" alt="pwnd"></p>
<p>and just like that we have obtained domain admin.</p>
<h2 id="finishing-notes">finishing notes</h2>
<p>long story short when configuring ADCS templates always ensure that the SAN cannot be supplied in the request and should always be taken from AD values.</p>
<p>ðŸ‘½</p>
]]></content>
        </item>
        
    </channel>
</rss>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on josh.cx</title>
        <link>https://josh.cx/posts/</link>
        <description>Recent content in Posts on josh.cx</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sat, 13 Apr 2024 00:00:00 +0000</lastBuildDate>
        <atom:link href="https://josh.cx/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>esc1 - a surprisingly easy privilege escalation</title>
            <link>https://josh.cx/posts/adcs/</link>
            <pubDate>Sat, 13 Apr 2024 00:00:00 +0000</pubDate>
            
            <guid>https://josh.cx/posts/adcs/</guid>
            <description>what is adcs? adcs - active directory certificate services is a windows server role that issues and manages PKI certificates that are used in authentication and communication protocols.
these certificates are issued through root and subordinate CA&amp;rsquo;s to various different users, computers and services to maintain certificate validity.
what is esc1? esc1 is a specific vulnerability targeting overly permissive active directory certificate templates that are issued by these CA&amp;rsquo;s.
i was pretty surprised how easy this was and even more so by the fact that i haven&amp;rsquo;t come across it before.</description>
            <content type="html"><![CDATA[<h2 id="what-is-adcs">what is adcs?</h2>
<p>adcs - active directory certificate services is a windows server role that issues and manages PKI certificates that are used in authentication and communication protocols.</p>
<p>these certificates are issued through root and subordinate CA&rsquo;s to various different users, computers and services to maintain certificate validity.</p>
<h2 id="what-is-esc1">what is esc1?</h2>
<p>esc1 is a specific vulnerability targeting overly permissive active directory certificate templates that are issued by these CA&rsquo;s.</p>
<p>i was pretty surprised how easy this was and even more so by the fact that i haven&rsquo;t come across it before.</p>
<p>the first thing i tried after coming across it was to replicate this vulnerability at my current workplace&rsquo;s environment. after approximately an hour using only a domain user account, i had successfully manage to impersonate the head of the soc team to create a new domain user account and it to the domain admins group using LDAP queries.</p>
<p>after managing to successfully escalate my normal domain account privileges to full domain admin at the company i work for, i decided to spin up a CA and take a further look.</p>
<h2 id="what-makes-a-template-vulnerable">what makes a template vulnerable?</h2>
<p>there are a few things that we are looking for when exploiting ESC1, however the most damning are enrolment rights being granted to low privileged users and requesters being able to specify a subjectAltName in the CSR.</p>
<p><strong>example 1:</strong></p>
<p><img src="/sanRequest.png" alt="subjectAltName"></p>
<p>in the above image the ability to include a subjectAltName in the CSR to that specific template is allowed.</p>
<p>active directory will prioritise the SAN name in a certificate for identity if the field is present. this means that by specifying a specific username in the SAN a .pfx can be requested to impersonate any user (e.g domain administrators)</p>
<p>when creating a new template it does give a warning mentioning the risks upon allowing anybody to request a SAN, however if cloning an existing template with it enabled it does not grant a warning.</p>
<p>$ this is a command</p>
<blockquote>
<p>another command test</p>
</blockquote>
]]></content>
        </item>
        
    </channel>
</rss>
